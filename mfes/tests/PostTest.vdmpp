class PostTest
types
public String = seq of char;values
-- TODO Define values here
instance variables

		 u : User := new User("Sofia",mk_User`Date(1,1,2019),"sofia@gmail.com","123");
		 pp : Post := new Post("I am a public post!", "public",u);
		 fp : Post := new Post("I am a family post!", "family",u);
		 cc : String := "I am a comment!";
		 cc2 : String := "hi!";
		 u2 : User := new User("Joao",mk_User`Date(1,1,2019),"joao@gmail.com","123");
		 r : String := "love";
		 
operations

 	private assertTrue: bool ==> ()
		 assertTrue(cond) == return
		 pre cond;
		 
-- testa like e dislike num post
	private like: ()==>()
	like() ==(
		IO`print("\nTest Like and Dislike");
		assertTrue(pp.hasLike(u,r) = {|->});
		pp.like(u,r);
		assertTrue(pp.hasLike(u,r) = {u|->r});
		pp.dislike(u);
		assertTrue(pp.hasLike(u,r) = {|->});
		
	);
	
	-- testa adicionar um comentÃ¡rio
	private add_comment: ()==>()
	add_comment() ==(
	  IO`print("\nTest Add Stranger Comment");
		assertTrue(pp.addComment(cc,u2) =false);
	  
	  IO`print("\nTest Add Friend Comment - Public Post");
		u2.sendFriendRequest(u);
		u.acceptRequest(u2);
		assertTrue(pp.addComment(cc,u2));
		
		IO`print("\nTest Add Friend Comment - Family Post");
		assertTrue(fp.addComment(cc,u2) =false);
		
		IO`print("\nTest Add Family Comment - Family Post");
		u.addToFamily(u2);
		assertTrue(fp.addComment(cc,u2));
		
		IO`print("\nTest Add Own Comment");
		assertTrue(fp.addComment(cc,u));
		
		IO`print("\nTest Remove Comment");
		assertTrue(pp.getCommentsNumber() =1);
		pp.removeComment(iota c in set pp.getComments() & c.getUser()=u2);
		assertTrue(pp.getCommentsNumber() =0);
	);
	
	private editPost: ()==>()
	editPost() ==(
	assertTrue(pp.getContent()="I am a public post!");
	pp.editPost("hello");
	assertTrue(pp.getContent()="hello");
	);
	
	private editComment: ()==>()
	editComment() ==(
	u2.sendFriendRequest(u);
	u.acceptRequest(u2);
	assertTrue(pp.addComment("hi",u2)=true);
	assertTrue(pp.getCommentFromUser(u2).getContent()="hi");
	pp.getCommentFromUser(u2).editComment("bye");
	assertTrue(pp.getCommentFromUser(u2).getContent()="bye");
	);
	 
 public static run: ()==>()
 	run() ==(
 	new PostTest().like();
 	new PostTest().add_comment();
 	new PostTest().editPost();
 	new PostTest().editComment();
	);


end PostTest